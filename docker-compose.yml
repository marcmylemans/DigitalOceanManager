version: "3.9"

services:
  db:
    image: postgres:13-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: multi_tenant_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  web:
    image: ghcr.io/marcmylemans/multi-tenant-cloud-management/test:latest
    environment:
      - FLASK_CONFIG=production
      - SECRET_KEY=your_prod_secret
      - DATABASE_URL=postgresql://youruser:yourpassword@db:5432/multi_tenant_db
      - ENCRYPTION_KEY=DaW0qjrXFChaGvzGF5kA-cUhJK3CMlwe3ll7sVhV4d4=
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    ports:
      - "5000:5000"

  celery:
    image: ghcr.io/marcmylemans/multi-tenant-cloud-management/test:latest
    container_name: celery_worker
    entrypoint: ["celery", "-A", "app.celery", "worker", "--loglevel=info"]
    environment:
      - FLASK_CONFIG=production
      - SECRET_KEY=your_prod_secret
      - DATABASE_URL=postgresql://youruser:yourpassword@db:5432/multi_tenant_db
      - ENCRYPTION_KEY=DaW0qjrXFChaGvzGF5kA-cUhJK3CMlwe3ll7sVhV4d4=
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web

  flower:
    image: ghcr.io/marcmylemans/multi-tenant-cloud-management/test:latest
    working_dir: /app
    entrypoint: [ "celery", "-A", "app.celery", "flower", "--address=0.0.0.0", "--port=5555" ]
    environment:
      - PYTHONPATH=/app
    ports:
      - "5555:5555"
    depends_on:
      - celery

volumes:
  postgres_data:
